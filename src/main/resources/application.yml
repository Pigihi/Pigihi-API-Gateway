# Eureka properties
eureka_hostname: service-registry
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://${eureka_hostname}:8761/eureka
  instance:
    hostname: localhost

# Server properties
server:
  port: 8191

# Application properties
spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
#     Customer Microservice
        - id: CUSTOMER-SERVICE
          uri: lb://CUSTOMER-SERVICE
          predicates:
            - Path=/user/customer/**
          filters:
            - name: Logging
              args:
                authenticationUri: localhost:8092/temp
#                baseMessage: My Custome Message
                preLogger: true
                postLogger: true
#          filters:
#            - AuthFilter
#     Order Microservice
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
#     Payment Microservice
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/makePayment/**, /paymentResponse/**
#     Product Microservice
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product/**, /category/**
#     Shop Microservice
        - id: SHOP-SERVICE
          uri: lb://SHOP-SERVICE
          predicates:
            - Path=/user/shop/**
#     User Communication Microservice
        - id: USER-COMMUNICATION-SERVICE
          uri: lb://USER-COMMUNICATION-SERVICE
          predicates:
            - Path=/sendEmail/**, /sendMobile/**
# If optional: is not used, the application won't start if there is no settings.yml 
  config:
    import: optional:settings.yml
        
# Change from localhost to corresponding microservice
# Should consider whether all microservices be accessible from outside
